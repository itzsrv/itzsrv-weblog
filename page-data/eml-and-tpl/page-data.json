{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-post-js","path":"/eml-and-tpl/","result":{"data":{"mdx":{"id":"fa4f8f6a-fb41-5cdc-abe8-7ea7be29e59f","excerpt":".eml files   File with extension .eml, is a complete email message saved in raw message format, by an email-client such as Microsoft Outlookâ€¦","frontmatter":{"title":"What are EML and TPL files","date":"2020-05-29T00:00:00.000Z","description":null,"tags":["post"],"cover":null},"fields":{"slug":"/eml-and-tpl/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"What are EML and TPL files\",\n  \"date\": \"2020-05-29T00:00:00.000Z\",\n  \"tags\": [\"post\"],\n  \"draft\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".eml files\"), \" \"), mdx(\"p\", null, \"File with extension .eml, is a complete email message saved in raw message format, by an email-client such as Microsoft Outlook or Apple Mail. It contains the content of the message, along with the subject, sender, recipient(s), and date of the message. It can also have email attachments, which are files sent with the message.\"), mdx(\"p\", null, \"Although modern web-clients like Mozilla or Chrome have direct support for it, but you can change the .eml file extension to .mht and open it directly in any web client. Else, convert it to .txt extension and then you can open it in any text editor.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".tpl files\"), \" \"), mdx(\"p\", null, \"A .tpl file extension is for template file format generated by using some sort of template engine. A TPL file includes style data and other metadata required to create a specific document. \"), mdx(\"p\", null, \"Programs that use the TPL file extension for template files include HTML Editor, Microsoft Access,  PHP Development, CakeWalk Audio, Canvas 7 etc.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"fa4f8f6a-fb41-5cdc-abe8-7ea7be29e59f"}}}